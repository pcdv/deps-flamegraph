#!/usr/bin/env bash
#
# Wraps calls to gradle, stackcollapse-gradle-dependencies.pl and flamegraph.pl 
# to generate a SVG flamegraph file showing all the dependencies of the current
# gradle java project.
#
# You can add the project dir to your PATH or you can simply add a
# symbolic link to the executable scripts in one of the dirs in your PATH.
#
################################################################################

# locate gradlew
for i in . .. ../.. ../../.. ../../../..; do
  if [ -f $i/gradlew ]; then
    GW="$i/gradlew"
    break
  fi
done
if [ "$GW" = "" ]; then
  GW=gradle
fi

# hack: same as readlink -f but works also on mac os
# (only works if the symbolic link points to the absolute path
# of the actual script)
function readlink_f() {
  if [ -L "$1" ]; then
    ls -l "$1" | sed 's/.* -> \(.*\)/\1/g'
  else
    echo "$1"
  fi
}

# locate stackcollapse-gradle-dependencies.pl
EXE=$(readlink_f "$0")
DIR=$(dirname "$EXE")
EXE="$DIR/stackcollapse-gradle-dependencies.pl"

# locate flamegraph.pl
if [ "$FLAMEGRAPH" = "" ]; then
  type flamegraph.pl > /dev/null 2>&1 
  if [ $? = 0 ]; then
    FLAMEGRAPH=flamegraph.pl
  elif [ "$FLAMEGRAPH_HOME" != "" ]; then
    FLAMEGRAPH="$FLAMEGRAPH_HOME/flamegraph.pl"
  elif [ -x "$DIR/FlameGraph/flamegraph.pl" ]; then
    FLAMEGRAPH="$DIR/FlameGraph/flamegraph.pl"
  else
    echo "Could not find flamegraph.pl, getting it from GitHub"
    ( cd $DIR ; git clone --quiet https://github.com/brendangregg/FlameGraph )
    FLAMEGRAPH="$DIR/FlameGraph/flamegraph.pl"
  fi
fi

PROJECT=$(basename $(pwd))

if [ "$CONFIGURATION" = "" ]; then
  echo "Computing $PROJECT runtime dependencies. Set CONFIGURATION=testRuntime to compute test dependencies."
  CONFIGURATION=runtime
else
  echo "Computing $PROJECT $CONFIGURATION dependencies."
fi

OUTFILE=deps-$CONFIGURATION.svg

$GW dependencies --configuration $CONFIGURATION | \
  $EXE "$@" | \
  $FLAMEGRAPH --minwidth 10 --title "$PROJECT $CONFIGURATION dependencies" --nametype "Dependency:"  --countname KiB \
  > $OUTFILE

echo "Generated $OUTFILE"